enum ProposalState {
  Pending
  Active
  Succeeded
  Failed
  Canceled
  Queued
  Executed
}

enum Winner {
  Yes
  No
  Abstain
  Na
}

type Executor @entity {
  id: ID!
  authorized: Boolean!
  propositionThreshold: BigInt!
  votingDuration: BigInt!
  voteDifferential: BigInt!
  minimumQuorum: BigInt!
  gracePeriod: BigInt!
  executionDelay: BigInt!
  admin: Bytes!
  authorizationBlock: BigInt!
  authorizationTimestamp: BigInt!
  pendingAdmin: Bytes
}

interface Action @entity {
  id: ID!
  user: Delegate!
  timestamp: Int!
}

type Proposal implements Action @entity {
  """
  proposal id
  """
  id: ID!
  "created timestamp"
  timestamp: Int!
  state: ProposalState!
  ipfsHash: String!
  "creator"
  user: Delegate!
  executor: Executor
  targets: [Bytes!]
  values: [BigInt!]
  signatures: [String!]
  calldatas: [Bytes!]
  withDelegatecalls: [Boolean!]
  startBlock: BigInt!
  endBlock: BigInt!
  governanceStrategy: Bytes!
  currentYesVote: BigInt!
  currentNoVote: BigInt!
  votes: [Vote!]! @derivedFrom(field: "proposal")
  executionTime: BigInt
  initiatorQueueing: Bytes
  initiatorExecution: Bytes
  lastUpdateTimestamp: Int!
  lastUpdateBlock: BigInt!
  title: String!
  simpleSummary: String!
  abstract: String!
  motivation: String!
  specification: String!
  rationale: String!
  testCases: String!
  copyrightWaiver: String!
  govContract: Bytes!
  totalPropositionSupply: BigInt!
  totalVotingSupply: BigInt!
  createdBlockNumber: BigInt!
  totalCurrentVoters: Int!
  author: String!
  discussions: String!
  txHash: String!
}

type Vote implements Action @entity {
  """
  voter:proposalid
  """
  id: ID!
  "voter"
  user: Delegate!
  timestamp: Int!
  proposal: Proposal!
  support: Boolean!
  votingPower: BigInt!
}

enum PowerType {
  Voting
  Proposition
}

type Delegation implements Action @entity {
  id: ID!
  user: Delegate!
  timestamp: Int!
  powerType: PowerType!
  amountRaw: BigInt!
  amount: BigDecimal!
  delegate: Delegate!
}

# Address which holds stkLyra or has been delegated voting or proposition power from another address
type Delegate @entity {
  "Wallet address"
  id: ID!

  "stkLyra Balance"
  balanceRaw: BigInt!
  balance: BigDecimal!

  "Votes which this user has participated in"
  votes: [Vote!]! @derivedFrom(field: "user")

  "Proposals which this user has created"
  proposals: [Proposal!]! @derivedFrom(field: "user")

  "Delegations which the user has made"
  delegations: [Delegation!]! @derivedFrom(field: "user")

  "Delegate who will vote or propose on user's behalf"
  votingDelegate: Delegate!
  propositionDelegate: Delegate!

  "Balance + DelegatedInVotingPower - DelegatedOutVotingPower"
  totalVotingPowerRaw: BigInt!
  totalVotingPower: BigDecimal!

  totalPropositionPowerRaw: BigInt!
  totalPropositionPower: BigDecimal!

  delegatedInVotingPowerRaw: BigInt!
  delegatedInVotingPower: BigDecimal!

  delegatedOutVotingPowerRaw: BigInt!
  delegatedOutVotingPower: BigDecimal!

  delegatedInPropositionPowerRaw: BigInt!
  delegatedInPropositionPower: BigDecimal!

  delegatedOutPropositionPowerRaw: BigInt!
  delegatedOutPropositionPower: BigDecimal!

  "Number of users represented for voting"
  usersVotingRepresentedAmount: Int!
  "Number of users represented for creating proposals"
  usersPropositionRepresentedAmount: Int!

  "Number of votes a user has cast"
  numVotes: Int!
  numProposals: Int!

  lastUpdateTimestamp: Int!
}
